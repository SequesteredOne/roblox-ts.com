"use strict";(self.webpackChunkroblox_ts=self.webpackChunkroblox_ts||[]).push([[998],{3238:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"usage","title":"Usage","description":"The following is a reference for how to use the roblox-ts command line interface.","source":"@site/docs/usage.mdx","sourceDirName":".","slug":"/usage","permalink":"/docs/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/roblox-ts/roblox-ts.com/blob/master/docs/usage.mdx","tags":[],"version":"current","frontMatter":{"title":"Usage"},"sidebar":"docs","previous":{"title":"Quick Start","permalink":"/docs/quick-start"},"next":{"title":"Setup Guide","permalink":"/docs/setup-guide"}}');var s=t(4848),r=t(8453);const l={title:"Usage"},a=void 0,i={},c=[];function u(e){const o={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.p,{children:"The following is a reference for how to use the roblox-ts command line interface."}),"\n",(0,s.jsxs)(o.p,{children:["This can be displayed with ",(0,s.jsx)(o.code,{children:"rbxtsc --help"}),"."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'roblox-ts - A TypeScript-to-Luau Compiler for Roblox\n\nCommands:\n  rbxtsc build  Build a project  [default]\n\nOptions:\n  -p, --project                project path  [string] [default: "."]\n  -w, --watch                  enable watch mode  [boolean] [default: false]\n      --usePolling             use polling for watch mode  [boolean] [default: false]\n      --verbose                enable verbose logs  [boolean] [default: false]\n      --noInclude              do not copy include files  [boolean] [default: false]\n      --logTruthyChanges       logs changes to truthiness evaluation from Lua truthiness rules  [boolean] [default: false]\n      --writeOnlyChanged       [boolean] [default: false]\n\t  --writeTransformedFiles  writes resulting TypeScript ASTs after transformers to out directory [boolean] [default: false]\n\t  --optimizedLoops         [boolean] [default: false]\n      --type                   override project type  [choices: "game", "model", "package"]\n  -i, --includePath            folder to copy runtime files to  [string]\n      --rojo                   manually select Rojo project file  [string]\n\t  --allowCommentDirectives [boolean] [default: false]\n  -h, --help                   show help information  [boolean]\n  -v, --version                show version information  [boolean]\n'})})]})}function d(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>l,x:()=>a});var n=t(6540);const s={},r=n.createContext(s);function l(e){const o=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(r.Provider,{value:o},e.children)}}}]);